param:

tid i

invariant [list_support] :

   head != null
/\ tail != null
/\ head != tail
/\ @12(i). -> (    insert::aux(i) != head
                /\ insert::aux(i) != tail
                /\ insert::aux(i) != insert::prev(i)
                /\ insert::aux(i) != insert::curr(i))
/\ rd(heap, head).next != head
/\ @3(i). -> insert::prev(i) != rd(heap, insert::prev(i)).next
/\ (@1(i). \/ @2(i). \/ @3(i).) -> rd(heap, head).next != head
/\ (@2(i). \/ @3(i). \/ @4(i).) -> insert::prev(i) = head
/\ (@6(i). \/ @7(i). \/ @8(i).) -> insert::curr(i) != null

// For transition 8
/\ (insert::curr(i) = null \/ (insert::curr(i) != null /\ rd(heap, insert::curr(i)).next != insert::curr(i)))

// For transition 12 (in region.inv)
/\ head in region
/\ tail in region
/\ insert::prev(i) in region
/\ insert::curr(i) in region
/\ (@12(i). \/ @13(i).) -> ~ (insert::aux(i) in region)


// Not cyclic lists
// /\ rd(heap, tail).next = null
// /\ tail in addr2set(heap, head)
// /\ null in addr2set(heap, head)





///\ (@1(i). -> rd(heap, head).next = tail)
///\ region = addr2set(heap, head)
///\ (@after_new(i). -> ~ (insert::aux(i) in region))
///\ null in addr2set(heap, head)


// /\ ~(head in addr2set(heap, rd(heap, head).next))
// /\ rd(heap, tail).next = null


// (@2(i). \/ @3(i). \/ @4(i).) -> rd(heap, insert::prev(i)).next != head /\
// @1(i). -> rd(heap, head).next = tail
// (@2(i). \/ @3(i). \/ @4(i).) -> rd(heap, head).next != head


// /\
// (~ @1(i).) -> insert::prev(i) != null /\
// (@2(i). \/ @3(i). \/ @4(i).) -> insert::prev(i) = head /\
// @4(i). -> rd(heap, insert::prev(i)).next = insert::curr(i) /\
// (@6(i). \/ @7(i). \/ @8(i).) -> rd(heap, insert::curr(i)).data != insert::e(i)

// /\


// @6(i). -> insert::prev(i) != insert::curr(i) /\
// @14(i). -> insert::prev(i) != insert::curr(i)




// rd(heap, head).next != null /\
// rd(heap, tail).next = null /\
// (@2(i). \/ @3(i). \/ @4(i).) -> insert::prev(i) = head /\
// (@12(i).) -> insert::aux(i) != head


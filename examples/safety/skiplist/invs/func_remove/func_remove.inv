vars:

invariant [skiplist_func_remove] :

   @should_be_removed. -> (elements = SetDiffElem (elements_before, SingleElem(main::e)))

/\ (@should_be_removed. \/ @remove_body.) -> main::e = remove::e

/\ @remove_final_loop_begins. -> (remove::i >= 0 -> elements = elements_before /\
                                  remove::i < 0 -> elements = SetDiffElem (elements_before, SingleElem(remove::e)))

/\ @remove_final_loop_i_decreases. -> (remove::i = 0 -> elements = SetDiffElem (elements_before, SingleElem(remove::e)) /\
                                       remove::i != 0 -> elements = elements_before)

/\ @remove_return. -> elements = SetDiffElem (elements_before, SingleElem(remove::e))

/\ (@main_call_remove. \/ @global_elements_equal.) -> elements_before = elements

///////////////////////////////////////////


/\ @remove_check_valueWasIn. ->
      (~ .remove::valueWasIn. -> ~ (remove::e inElem elements))





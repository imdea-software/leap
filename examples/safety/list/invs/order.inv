vars:

tid i

invariant [fullOrder] :

   rd(heap, head).data = lowestElem
/\ rd(heap, tail).data = highestElem

/\ @main_e(i). -> (main::e(i) != lowestElem /\ main::e(i) != highestElem)
/\ @search_body(i). -> (search::e(i) != lowestElem /\ search::e(i) != highestElem)
/\ @insert_body(i). -> (insert::e(i) != lowestElem /\ insert::e(i) != highestElem)
/\ @remove_body(i). -> (remove::e(i) != lowestElem /\ remove::e(i) != highestElem)

/\ @ins_curr_def(i). -> (rd(heap, insert::curr(i)).data < rd(heap, tail).data \/
                         rd(heap, insert::curr(i)).data = rd(heap, tail).data)
/\ @ins_prev_def(i). -> (rd(heap, insert::prev(i)).data < rd(heap, tail).data \/
                         rd(heap, insert::prev(i)).data = rd(heap, tail).data)

/\ @ins_while(i). -> rd(heap, insert::prev(i)).data < insert::e(i)
/\ @ins_curr_lower(i). -> rd(heap, insert::curr(i)).data < insert::e(i)
/\ @ins_prev_lower(i). -> rd(heap, insert::prev(i)).data < insert::e(i)
/\ @ins_insert(i). -> rd(heap, insert::curr(i)).data > insert::e(i)
/\ @after_malloc(i). -> rd(heap, insert::aux(i)).data = insert::e(i)
/\ @rem_remove(i). -> rd(heap, remove::curr(i)).data = remove::e(i)

* How to add a new theory

+ First, you need to create the theory definitions and its interface with 
the general Expression module. This is done in the src/theories folder.  
For instance, if you are creating the theory of Pairs, then you may need 
to add:

src/theories/pairs/PairsExpression.ml
src/theories/pairs/PairsExpression.mli
src/theories/pairs/PairsInterface.ml
src/theories/pairs/PairsInterface.mli

Basically, the PairsExpression module contains the definition of the 
theory and the PairsInterface states how elements from Expression are 
converted into PairsExprssion and the other way round.


+ Export the signature of the module that defines expressions for the new 
theory in the ExpressionTypes file:

src/expression/ExpressionTypes.mli

Basically, you are just cleanly publishing the interface of the new 
theory.


+ You need to add a new reference to the list of available decision 
procedures listed in the files

src/solvers/theory/DP.ml
src/solvers/theory/DP.mli

By adding the new theory on this file, you let Leap know that there is a 
new theory that can be used in the analysis of verification 
conditions.


+ You need to define the generic interface of the theory with the solver.  
You need your interface for the new theory to extend form the common 
interface COMMON_QUERY.

Specific solvers (like Yices or Z3, will then need to implement the 
interface described in this module). The interface will usually contain 
functions mapping from theory formulas to a string representation of such 
formula in the notation of an specific SMT solver.

In the case of the theory of pairs, we need to declare a PAIRS_QUERY 
module template in the following file:

src/solvers/backend/query/templates/PairsQuery.mli

Basically, you are stating which are the interface functions that a solver 
of the new theory will require to implement.


+ You need to define a new backend interface for the new theory. This 
declares the functions that may be used in order to translate an 
expression of the new theory into a valid string representation for an 
specific solver. This is done in the following file:

/src/solvers/backend/BackendSolverIntf.mli


Basically, you are creating a new backend (solver communication) interface 
which may include only the new theory you are declaring or, for instance, 
a custom backend capable of dealing with many theories at once.


+ Add an entry to the tables in BackendSolvers:

/src/solvers/backend/BackendSolvers.ml

The tables stored in this file contains the information on which SMT 
solver to use for each specific theory. Basically, by updating this 
tables, you are telling Leap which are the available SMT solvers capable 
of dealing with an specific theory.


+ You need to add the new theory as a solver, by defining the modules in 
the src/solvers/theory folder. For instance, for the theory of pairs you 
may need to add:

src/solvers/theory/PairsSolver.ml
src/solvers/theory/PairsSolver.mli

What you are doing here is declaring the interface that will be used by 
the SMT solver in order to check the satisfiability of expressions in the 
new theory.


+ You may optionally need to update the interface of an SMT solver. For 
Yices and Z3 this is done in the files:

/src/solvers/backend/yices/Yices.mli
/src/solvers/backend/yices/Yices.ml
/src/solvers/backend/z3/Z3.mli
/src/solvers/backend/z3/Z3.ml

This depends on whether the new theory is included as part of the backend 
the solver implements.

+ For each SMT solver that will be capable of solving the new theory, you 
need to create a module which describes how a formulas in the new theory 
is translated into a query following the syntax of the SMT solver. The 
files describing such modules should be added to an appropriate folder 
(depending on the SMT solver) inside:

/usr/solvers/backend/query

For example, if Yices and Z3 will support the new theory of pairs, then 
you need to create the modules:

/usr/solvers/backend/query/yices/YicesPairsQuery.mli
/usr/solvers/backend/query/yices/YicesPairsQuery.ml
/usr/solvers/backend/query/z3/Z3PairsQuery.mli
/usr/solvers/backend/query/z3/Z3PairsQuery.ml

+ Add a function so that the appropriate query module for the new theory 
can be found. This must be done in the query manager, located at:

/src/solvers/backend/QueryManager.mli
/src/solvers/backend/QueryManager.ml


+ Then, you need to describe Leap how to compute the cutoff for a formula 
in the new theory according to all the available possible cutoff 
strategies. This is done in the folder:

/src/smp

For example, in the case of the theory of pairs, you need to add the 
following files:

/src/smp/SmpPairs.mli
/src/smp/SmpPairs.ml
